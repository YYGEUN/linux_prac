#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <unistd.h>
#include <sys/types.h>
#include <sys/stat.h>
#include <fcntl.h>
#include <sys/mman.h>
#include <sys/ipc.h>
#include <sys/shm.h>
#include <sys/procfs.h>
#include <sys/sem.h>
#include <arpa/inet.h>
#include <signal.h>
#include <sys/socket.h>
#include <pthread.h>
#include <sys/wait.h>

#define MAXLINE 1024

int main(int argc, char* argv[]) {
	struct sockaddr_in serveraddr;
    int server_sockfd;
    int client_len;
    char buf[MAXLINE];
    char rbuf[MAXLINE];
    
    if ((server_sockfd = socket(AF_INET, SOCK_STREAM, 0)) < 0) {
    	perror("error : ");
        return 1;
    }
    
    server_sockfd = socket(AF_INET, SOCK_STREAM, 0);
    memset(&serveraddr,0,sizeof(serveraddr));
    serveraddr.sin_family = AF_INET;
    serveraddr.sin_addr.s_addr = inet_addr(argv[1]);
    serveraddr.sin_port = htons(atoi(argv[2]));
    
    client_len = sizeof(serveraddr);
    
    if(connect(server_sockfd, (struct sockaddr *)&serveraddr, client_len) < 0) {
    	perror("connect error : ");
        return 1;
    }
    
    while(1)
    {
      memset(buf, 0x00, MAXLINE);
      read(0, buf, MAXLINE);
      if(write(server_sockfd, buf, MAXLINE) <= 0) {
        perror("write error : ");
          return 1;
      }

      memset(buf, 0x00, MAXLINE);
      if(read(server_sockfd, buf, MAXLINE) <= 0) {
        perror("read error : ");
          return 1;
      }

      printf("send to server : %s", buf);
    
    }

    close(server_sockfd);
    return 0;
}
